<!-- Tim Tesner - 2017 -->


<!-- Aim / Click / Shoot - mouse and {W A S D} keys -( and X key for back zoom of view that is still being worked on --> 

<!-- Everything is produced in combinations Randomly so try refreshing multiple times -->

<!-- A work of Art -->

<!-- Audio Format = mp3 -->

<!-- multiple explosion gifs, overlay cockpit backgrounds, ships, explosion sounds by random with display timers, greeting audio, background audio -->

<!-- Had the idea to try out a few coding ideas which turned into a fun bunch of code -->

<!-- Check Console for more info -->

<!-- To do list - Adjust the gif placement of each individual explosion img by making it set from within the random array/object list, and make the explosion appear more directly on center of ship/target using css margins/paddings, or absolute positioning etc -- if each gif/pic explosion you use is centered, then you wouldn't need this future feature similar to how the explosion ends on each gif custom so it doesn't loop -->

<!-- Captains Log - stardate 4/2/17 - After trying to solve the problem of being able to click/target ship when it was zIndexed underneath of the transparent cockpit for layers...(you could see it through the partially transparent cockpit image, but couldn't click it... I had a clever idea to build a ghost overlay ship with zero opacity that would double overtop of original ship position. Because of the visual effect of having the cockpit image at a higher zIndex than the ship, the ship will be behind it, and wouldn't allow an onclick..because you would be really clicking on the background cockpit image without the ghost ship that is at zIndex of 5, and ship is at zIndex 1.  Also tried to calculate ship remove based on offsetWidth/offsetHeight, and event.clientX/event.clientY etc but figured this is much better. Overlay ghost ship is opacity zero, and its zIndex is 5, which makes it one above background image enabling onclick. Also added a necessary div to contain the ghost overlay ship to work properly with the idea of flying away from the ship - One of the coolest things in the whole codebase of this is the ghost overlay and ghost div overlay idea-->

<!-- Added fading shots - fades shot opacity and size, and lines up with crosshairs still -- need to add code that will move shots with background too -->

<!-- Added code to not stream shots from cursor if the setInterval is happening at the moment..(without this the shots repeatedly streamed down from cursor) -->

<!-- Images, and Audio are all harvested/linked from various found files all across the internet - Thanks to the Artists -->

<!-- The layers of this code work together for nice effect, and fun.

audio clips
explosions
spaceships
cockpits
bullets/shots
ghost div
ghost ship overlay
move background image
zoom_out
added mulitple polyphony audio - can clcik the same sound overtop of same sound without restarting (firing shots)

random
marquee tag imitation - thanks internet code I found - *needs work
image transparency - zero opacity
onclicks
css display:none to get rid of loop of gifs
timers
creating elements dynamically
zIndex of images to create layers that overlap and transparency shows through
hidden audio tags
cursor:crosshair
bullets themselves are a gif
bullets disappear with a timer
centering the middle of the explosion gif/pic onto cursor location of ship hit
Audio elements that no have loop, or autoplay.
Randomly bringing a bunch of images I randomly found/harvested from the internet.
Play Background Audio's once, and destroy function. This simulates autoplay on android/phone, whereas on the audio element autoplay=true works on desktop chrome browser.

-->

<!-- under construction :
flying controls - press {w a s d} keys after clicking on page to focus()
Was a black background until it was switched for a space picture background, making some explosion gifs have black backgrounds. The gifs used to look like real explosions with a matching black background.  If only I could get all transparent gifs for the explosions as well as the ships.
-->

<!-- Added controls based on moving cockpit image, was trying to move ship and redraw ship img, but decided to move background instead, which leaves background showing outside edges once moved.. -->


<!-- BUGS/Fix/WIP


1 - The code to move bullets as you fly away, like explosions move away from you as you fly. There is an Uncaught TypeError - "Cannot read property 'offsetLeft' of null at checkkey" - tried to fix this with if statements asking if undefined or null etc.-

2 - I might be editing/working on this pen if you see it, or see errors, so refresh or check back maybe.
-->

<!-- This is getting fun -->

<!-- To DO list - 4/5/2017 ---

Add diagonal movement.
Movement of ships need to be some formulas more, not just css controlled animated floating gifs / marquee movement simulation.
Enemies need to not just be sitting ducks when you aim at them.
Enemies need to be generated with random strengths/weaknesses/speed/abilites, so sometimes they are faster or slower when generated etc.
Make movement smoother using multiple keypresses in combination.  Movement is a bit stuttery using just WASD keys so far.
Rewrite Code to use less code and share components more.
Insert some code libraries - $/jQuery etc - trying to shorten code later
Maybe make this fully into Javascript for demonstration purposes.
Add more bullets types.
Make bullet/shot fade away in size, and visually as you fire, to represent distance traveled, and energy lost traveling to target.
Finish Zoom_out function -- X key - buggy, lets you see outside background border.
Finish and Uncomment the Bullet/shot movement code like the way explosions move, half the rate. -- errors right now - IF statements added to the checkkey movement functions.
Add Zoom_in function.
Add Barrel Roll by spinning the background space_view at a center point that must be the center of cockpit screen etc.
Add light Barrel Roll for right/left turns.
Need panorama type backgrounds so they can connect as rotation happens, so the borders feel limitless.
Add enemy ship powerbar/Revise 1 shot kill to an option, or powerbar type.
Add score/high score/game timers.
Add more explosion sounds.
Add more firing sounds.
Add Targeted Ship Classification.
Add tracking device weapon for remote detonation by using the explosion function later than 1st onclick.
Add weapon banks keys 1-7.
Add sound effects to each action.
Add functionality that will Shrink the enemy and explosions still onscreen as you zoom out, or vice versa on zoom_in to a point so they don't get too close to screen
Insert Enemies into Zoomed playing field, or to zoomed outer area.
Add enemy flight paths
Add enemies into random points on screen so you have to sorta hunt for them.
Maybe Limit mouse movement to a zone, and that is different in each ship cockpit your in, so you have to fly/move more to target instead of streaking your mouse over to the target each time.
Add speed burst travel with shift key, or lock in speed burst with caps lock key.
Add spacebar firing, as an option to mouse click, or as another usable weapon or function.
utilize mouse scroll wheel.
Make controls for Phones/Mobile devices that have device orientation tilt/gyro functionality 

-->






html {
  background-color: black;
  margin:0;
  cursor: crosshair;
  width:100%;
  height:100%;
  /*hide cursor crosshairs unless aimed out cockpit window(body)*/
  /*background: url('https://images.freecreatives.com/wp-content/uploads/2016/03/Beautiful-Outer-Space-Background.jpg');
  background-size:cover;
  background-repeat:no-repeat;
  background-position:0 0;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  */
}

body {
  /*background-color: black;*/
  margin:0;
  cursor: crosshair;
  width:100%;
  height:100%;
  overflow-x:hidden;
  overflow-y:hidden;
  /*opacity:0;
  filter:alpha(opacity=0);*/
   user-select: none;
  -moz-user-select: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  -ms-user-select: none
}

.bg_class{
  z-index:4;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

.exp_gif_class {
  background-color:inherit
}


.img_class_1 {
  margin:0;
  cursor: crosshair;
  width:200px;
  height:150px;
  -moz-transform: translateX(100%);
  -webkit-transform: translateX(100%);
  transform: translateX(100%);
  /* Apply animation to this element */
  -moz-animation: example1 1s linear infinite alternate;
  -webkit-animation: example1 1s linear infinite alternate;
  animation: example1 1s linear infinite alternate;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

.img_overlay_class_1 {
  margin:10px 0 40px 0;
  cursor: crosshair;
  width:200px;
  height:150px;
  -moz-transform: translateX(100%);
  -webkit-transform: translateX(100%);
  transform: translateX(100%);
  /* Apply animation to this element */
  -moz-animation: example1 1s linear infinite alternate;
  -webkit-animation: example1 1s linear infinite alternate;
  animation: example1 1s linear infinite alternate;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}


/* Move it (define the animation) */

@-moz-keyframes example1 {
  0% {
    -moz-transform: translateX(-100%);
    transform: translateX(-100%);
  }
  100% {
    -moz-transform: translateX(100%);
    transform: translateX(100%);
  }
}

@-webkit-keyframes example1 {
  0% {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
  }
  100% {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
  }
}

@keyframes example1 {
  0% {
    -moz-transform: translateX(-100%);
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
  }
  100% {
    -moz-transform: translateX(100%);
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
  }
}


